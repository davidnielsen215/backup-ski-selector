{"ast":null,"code":"var _jsxFileName = \"/Users/davidnielsen/Career/Sport-systems/ski-selector/ski_selector_3/src/components/Result.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport SkiResult from './SkiResult';\nexport default class Result extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      skiResults: {\n        result1: undefined,\n        result2: undefined,\n        result3: undefined,\n        result4: undefined,\n        result5: undefined\n      },\n      inputValues: {\n        terrain: {\n          p: 'p',\n          m: 'm',\n          t: 't',\n          g: undefined,\n          b: undefined\n        },\n        gender: 'f',\n        skillLevel: {\n          b: undefined,\n          i: 'i',\n          a: undefined,\n          e: 'e'\n        },\n        speed: {\n          f: undefined,\n          m: 'm',\n          s: 's'\n        },\n        turnRadius: {\n          s: 's',\n          m: 'm',\n          l: undefined\n        },\n        snow: {\n          g: 'g',\n          p: 'p',\n          a: undefined\n        } // terrain: this.props.values.terrain,\n        // gender: this.props.values.gender,\n        // skillLevel: this.props.values.skillLevel,\n        // speed: this.props.values.speed,\n        // turnRadius: this.props.values.turnRadius,\n        // snow: this.props.values.snow,\n\n      },\n      isEmpty: false\n    };\n\n    this.retrieveSki = () => {\n      Axios.post('http://localhost:5000/skis/find', this.state.inputValues).then(res => {\n        if (res.data[0] !== undefined) {\n          this.setState({\n            skiResults: { ...this.state.skiResults,\n              result1: res.data[0].name\n            }\n          });\n        }\n\n        if (res.data[1] !== undefined) {\n          this.setState({\n            skiResults: { ...this.state.skiResults,\n              result2: res.data[1].name\n            }\n          });\n        }\n\n        if (res.data[2] !== undefined) {\n          this.setState({\n            skiResults: { ...this.state.skiResults,\n              result3: res.data[2].name\n            }\n          });\n        }\n\n        if (res.data[3] !== undefined) {\n          this.setState({\n            skiResults: { ...this.state.skiResults,\n              result4: res.data[3].name\n            }\n          });\n        }\n\n        if (res.data[4] !== undefined) {\n          this.setState({\n            skiResults: { ...this.state.skiResults,\n              result5: res.data[4].name\n            }\n          });\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.restart = e => {\n      e.preventDefault();\n      this.props.restart();\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveSki();\n  }\n\n  render() {\n    let skis = this.state.skiResults;\n    let skis1 = this.state.skiResults.result1;\n    let skis2 = this.state.skiResults.result2;\n    let skis3 = this.state.skiResults.result3;\n    let skis4 = this.state.skiResults.result4;\n    let skis5 = this.state.skiResults.result5;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.background,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: styles.textColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"Recommended Skis\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.cardContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, Object.keys(skis).map(function (item, i) {\n      if (skis[item] !== undefined) {\n        return /*#__PURE__*/React.createElement(SkiResult, {\n          key: i,\n          skis: skis,\n          item: item,\n          cardStyle: styles.card,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 28\n          }\n        });\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.retrieveSki,\n      style: styles.previousButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"retrieve\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.restart,\n      style: styles.restartButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, \"restart\"));\n  }\n\n}\nconst styles = {\n  restartButton: {\n    color: 'white',\n    minWidth: '15vw',\n    minHeight: '5%',\n    backgroundColor: 'rgba(63,84,184,1)',\n    // font-family: 'Roboto', sans-serif;;\n    fontSize: '25px',\n    borderRadius: '10px',\n    margin: '2vh',\n    padding: '3px',\n    cursor: 'pointer'\n  },\n  cardContainer: {\n    display: 'flex',\n    overflow: 'scroll',\n    maxWidth: '85vw',\n    marginLeft: '7vw',\n    // flex: 'row',\n    border: '1px solid red'\n  },\n  card: {\n    minWidth: '23vw',\n    maxWidth: '30vw',\n    maxHeight: '35vh',\n    margin: '2vh' // margin: '35px',\n    // minWidth: '315px',\n\n  },\n  textColor: {\n    color: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: '15px',\n    fontSize: '22px'\n  },\n  background: {\n    minHeight: '100vh',\n    maxHeight: '170vh',\n    background: 'black'\n  },\n  previousButton: {\n    color: 'white',\n    minWidth: '15vw',\n    minHeight: '5%',\n    backgroundColor: '#9e2232',\n    // font-family: 'Roboto', sans-serif;;\n    fontSize: '25px',\n    borderRadius: '10px',\n    margin: '2vh',\n    padding: '3px',\n    cursor: 'pointer'\n  }\n};","map":{"version":3,"sources":["/Users/davidnielsen/Career/Sport-systems/ski-selector/ski_selector_3/src/components/Result.js"],"names":["React","Component","Axios","SkiResult","Result","state","skiResults","result1","undefined","result2","result3","result4","result5","inputValues","terrain","p","m","t","g","b","gender","skillLevel","i","a","e","speed","f","s","turnRadius","l","snow","isEmpty","retrieveSki","post","then","res","data","setState","name","catch","err","console","log","restart","preventDefault","props","componentDidMount","render","skis","skis1","skis2","skis3","skis4","skis5","styles","background","textColor","cardContainer","Object","keys","map","item","card","previousButton","restartButton","color","minWidth","minHeight","backgroundColor","fontSize","borderRadius","margin","padding","cursor","display","overflow","maxWidth","marginLeft","border","maxHeight","justifyContent","alignItems","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Axios from 'axios'\nimport SkiResult from './SkiResult'\n\n\nexport default class Result extends Component {\n    state = {\n        skiResults :{\n            result1: undefined,\n            result2: undefined,\n            result3: undefined,\n            result4: undefined,\n            result5: undefined\n        },\n        inputValues: {\n            terrain: {\n                p: 'p',\n                m: 'm',\n                t: 't',\n                g: undefined,\n                b: undefined\n            },\n            gender: 'f',\n            skillLevel: {\n                b: undefined,\n                i: 'i',\n                a: undefined,\n                e: 'e'\n\n            },\n            speed: {\n                f: undefined,\n                m: 'm',\n                s: 's'\n            },\n            turnRadius: {\n                s: 's',\n                m: 'm',\n                l: undefined\n            },\n            snow:{\n                g: 'g',\n                p: 'p',\n                a: undefined\n            },\n            // terrain: this.props.values.terrain,\n            // gender: this.props.values.gender,\n            // skillLevel: this.props.values.skillLevel,\n            // speed: this.props.values.speed,\n            // turnRadius: this.props.values.turnRadius,\n            // snow: this.props.values.snow,\n        },\n        isEmpty: false,\n    }\n\n    retrieveSki = () => {\n        Axios.post('http://localhost:5000/skis/find', this.state.inputValues).then(res => {  \n            \n            if(res.data[0] !== undefined){\n                this.setState({\n                    skiResults: {\n                        ...this.state.skiResults,\n                        result1: res.data[0].name\n                    }\n                })\n            }\n            if(res.data[1] !== undefined){\n                this.setState({\n                    skiResults: {\n                        ...this.state.skiResults,\n                        result2: res.data[1].name\n                    }\n                })\n            }\n            if(res.data[2] !== undefined){\n                this.setState({\n                    skiResults: {\n                        ...this.state.skiResults,\n                        result3: res.data[2].name\n                    }\n                })\n            }\n            if(res.data[3] !== undefined){\n                this.setState({\n                    skiResults: {\n                        ...this.state.skiResults,\n                        result4: res.data[3].name\n                    }\n                })\n            }\n            if(res.data[4] !== undefined){\n                this.setState({\n                    skiResults: {\n                        ...this.state.skiResults,\n                        result5: res.data[4].name\n                    }\n                })\n            }   \n            })\n        .catch(err => (console.log(err)))\n    }\n \n    \n\n    componentDidMount() {\n            this.retrieveSki()     \n    }\n    \n    restart = (e) => {\n        e.preventDefault()\n        this.props.restart()\n    }\n    \n    render() {\n        let skis = this.state.skiResults\n        let skis1 = this.state.skiResults.result1\n        let skis2 = this.state.skiResults.result2\n        let skis3 = this.state.skiResults.result3\n        let skis4 = this.state.skiResults.result4\n        let skis5 = this.state.skiResults.result5\n\n\n\n        return(\n        <div style={styles.background}>\n            <div>\n            <h1 style={styles.textColor}>Recommended Skis</h1>\n            <br/>\n                {/* {emptiness} */}\n            <br/>\n            <div style={styles.cardContainer}>\n            {Object.keys(skis).map(function(item, i){\n                if(skis[item] !== undefined){\n                    return <SkiResult key={i} skis={skis} item={item} cardStyle={styles.card}/>\n                }\n                \n            })}\n            </div >\n            \n            </div>\n            <button onClick={this.retrieveSki} style={styles.previousButton}>retrieve</button>\n            <button onClick={this.restart} style={styles.restartButton}>restart</button>\n        </div>\n        )\n    }\n    }\n\nconst styles = {\n    restartButton: {\n        color: 'white',\n        minWidth: '15vw',\n        minHeight: '5%',\n        backgroundColor: 'rgba(63,84,184,1)',\n        // font-family: 'Roboto', sans-serif;;\n        fontSize: '25px',\n        borderRadius: '10px',\n        margin: '2vh',\n        padding: '3px',\n        cursor: 'pointer'\n    },\n    cardContainer: {\n        display: 'flex',\n        overflow: 'scroll',\n        maxWidth: '85vw',\n        marginLeft: '7vw',\n        // flex: 'row',\n        border: '1px solid red'\n    },\n    card: {\n        minWidth: '23vw',\n        maxWidth: '30vw',\n        maxHeight: '35vh',\n        margin: '2vh'\n        // margin: '35px',\n        // minWidth: '315px',\n    },\n    textColor: {\n        color: 'white',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingTop: '15px',\n        fontSize: '22px'\n    },\n    background: {\n        minHeight: '100vh',\n        maxHeight: '170vh',\n        background: 'black'\n    },\n    previousButton: {\n        color: 'white',\n        minWidth: '15vw',\n        minHeight: '5%',\n        backgroundColor: '#9e2232',\n        // font-family: 'Roboto', sans-serif;;\n        fontSize: '25px',\n        borderRadius: '10px',\n        margin: '2vh',\n        padding: '3px',\n        cursor: 'pointer'\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}